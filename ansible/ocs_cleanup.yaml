---
- hosts: convergence_base
  gather_facts: false
  become: true
  user: root
  vars_files: vars/default.yaml
  roles:
  - oc_local

  tasks:
  - block:
    - name: Remove OCS from OCP cluster
      shell: |
        oc patch pvc db-noobaa-db-0 --type='json' -p='[{"op": "replace", "path": "/metadata/finalizers", "value":[]}]' -n openshift-storage;
        oc patch cephcluster storagecluster-cephcluster --type='json' -p='[{"op": "replace", "path": "/metadata/finalizers", "value":[]}]' -n openshift-storage;
        oc patch storagecluster storagecluster --type='json' -p='[{"op": "replace", "path": "/metadata/finalizers", "value":[]}]' -n openshift-storage;
        oc delete storagecluster storagecluster -n openshift-storage;
        oc patch backingstore noobaa-default-backing-store --type='json' -p='[{"op": "replace", "path": "/metadata/finalizers", "value":[]}]' -n openshift-storage;
        oc delete --ignore-not-found namespace/openshift-storage
      register: remove_ocs
      failed_when: remove_ocs.stderr != "" and ("not found" not in remove_ocs.stderr and "the server doesn't have a resource type" not in remove_ocs.stderr)
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

    - name: Remove local storage from OCP cluster
      shell: |
        oc delete --ignore-not-found localvolumes/local-disks -n local-storage
        for i in $(oc get pv -n local-storage -l storage.openshift.com/local-volume-owner-name=local-disks --no-headers -o name); do
          oc delete $i -n local-storage
        done
        oc patch localvolume local-disks --type='json' -p='[{"op": "replace", "path": "/metadata/finalizers", "value":[]}]' -n local-storage;
        oc delete --ignore-not-found namespace/local-storage
      register: remove_local_storage
      failed_when: remove_local_storage.stderr != "" and ("not found" not in remove_ocs.stderr and "the server doesn't have a resource type" not in remove_ocs.stderr)
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

    - name: Scale storage machineset to 0
      shell: oc scale machineset/{{ ocp_cluster_name }}-storage-0 --replicas=0 -n openshift-machine-api
      register: scale_machineset
      failed_when: scale_machineset.stderr != "" and "not found" not in scale_machineset.stderr
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

    - name: Wait for storage nodes to be de-provisioned
      shell: oc get nodes -l node-role.kubernetes.io/storage
      retries: 100
      delay: 20
      register: storage_nodes_removed
      until: "'-storage-' not in storage_nodes_removed.stdout"
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

    - name: Delete storage machineset
      shell: oc delete --ignore-not-found machineset/{{ ocp_cluster_name }}-storage-0 -n openshift-machine-api
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

    - name: Remove storage baremetal hosts from OCP
      shell: oc delete --ignore-not-found bmh/storage-{{ item }} -n openshift-machine-api
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"
      with_items:
        - 0
        - 1
        - 2

    - name: Stop and delete storage VM vbmcs
      shell: |
        vbmc stop {{ item }};
        vbmc delete {{ item }}
      register: remove_vbmcs
      failed_when: remove_vbmcs.stderr != "" and "No domain with matching name" not in remove_vbmcs.stderr
      with_items:
        - "{{ ocp_cluster_name }}-storage-0"
        - "{{ ocp_cluster_name }}-storage-1"
        - "{{ ocp_cluster_name }}-storage-2"

    - name: Destroy and undefine storage VMs
      shell: |
        virsh destroy {{ item }};
        virsh undefine {{ item }}
      register: remove_vms
      failed_when: remove_vms.stderr != "" and ("failed to get domain" not in remove_vms.stderr and "domain is not running" not in remove_vms.stderr)
      with_items:
        - "{{ ocp_cluster_name }}-storage-0"
        - "{{ ocp_cluster_name }}-storage-1"
        - "{{ ocp_cluster_name }}-storage-2"
      
    - name: Remove storage VM qcow2s
      command: "virsh vol-delete {{ item }}.qcow2 --pool=default"
      register: remove_vm_volumes
      failed_when: remove_vm_volumes.stderr != "" and "Storage volume not found" not in remove_vm_volumes.stderr
      with_items:
        - "{{ ocp_cluster_name }}-storage-0"
        - "{{ ocp_cluster_name }}-storage-1"
        - "{{ ocp_cluster_name }}-storage-2"

    - name: Read host {{ ocs_device }} information
      parted: device={{ ocs_device }} unit=MiB
      register: device_info

    - name: Remove partitions on host {{ ocs_device }}
      parted:
        device: '{{ ocs_device }}'
        number: '{{ item.num }}'
        state: absent
      loop: '{{ device_info.partitions }}'