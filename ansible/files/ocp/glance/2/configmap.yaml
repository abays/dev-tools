apiVersion: v1
kind: ConfigMap
metadata:
  name: glance
  namespace: openstack
data:
  glance-api.conf: |
    [DEFAULT]
    verbose=True
    show_image_direct_url=True
    enable_v2_api=True
    node_staging_uri=file:///var/lib/glance/staging
    enabled_import_methods=[web-download]
    bind_host=0.0.0.0
    bind_port=9292
    workers=3
    image_cache_dir=/var/lib/glance/image-cache
    registry_host=0.0.0.0
    transport_url=rabbit://guest:foobar123@openstack-rabbitmq.openstack.svc:5672/?ssl=0
    enable_v1_api=False
    log_config_append=/etc/glance/logging.conf

    [database]
    connection=mysql+pymysql://glance:password@mariadb.openstack.svc/glance

    [file]
    filesystem_store_datadir = /var/lib/glance/images

    [glance_store]
    enabled_backends=file
    default_backend=file

    [keystone_authtoken]
    www_authenticate_uri=http://keystone-openstack.apps.ostest.test.metalkube.org/
    auth_url=http://keystone.openstack.svc:5000/
    auth_type=password
    username=glance
    password=password
    project_domain_name=Default
    user_domain_name=Default
    project_name=services

    [oslo_messaging_notifications]
    driver=messagingv2
    transport_url=rabbit://guest:foobar123@openstack-rabbitmq.openstack.svc:5672/?ssl=0

    [oslo_middleware]
    enable_proxy_headers_parsing=True

    [oslo_policy]
    policy_file=/etc/glance/policy.json

    [paste_deploy]
    config_file = /usr/share/glance/glance-api-dist-paste.ini
  kolla-config.json: |
    {
      "command": "/usr/bin/glance-api --config-file /etc/glance/glance-api.conf --config-file /etc/glance/glance-image-import.conf",
      "config_files": [
        {
          "source": "/var/lib/config-data/glance-api.conf",
          "dest": "/etc/glance/glance-api.conf",
          "owner": "glance",
          "perm": "0600"
        },
        {
          "source": "/var/lib/config-data/logging.conf",
          "dest": "/etc/glance/logging.conf",
          "owner": "glance",
          "perm": "0600"
        }
      ]
    }
  logging.conf: |
    [loggers]
    keys=root

    [handlers]
    keys=stdout

    [formatters]
    keys=normal


    ###########
    # Loggers #
    ###########

    [logger_root]
    level=WARNING
    handlers=stdout

    ################
    # Log Handlers #
    ################

    [handler_stdout]
    class=StreamHandler
    level=WARNING
    formatter=normal
    args=(sys.stdout,)

    ##################
    # Log Formatters #
    ##################

    [formatter_normal]
    format=(%(name)s): %(asctime)s %(levelname)s %(message)s
